#!/bin/bash
#    Get a reasonably accurate word count for posts in the current month

cd ~/vv/users/$USER/Private/Journals

m=$(date "+%m"); this_month=$m
y=$(date "+%Y")

while :; do
    case $1 in
	-v) verbose=-------;
	    shift
	    ;;
    esac
    break
done

# TODO: -m option
if [ ! -z $1 ]; then m=$1; fi


stats=Posting
if (( $m == 11 )); then
    stats=NaBloPoMo
else
    stats=Posting
fi
echo "<pre>$stats stats:"

count-words () {
    files=`ls ${1}* 2>/dev/null`
    total=0
    count=0
    missed=0
    last=0
    for f in $files ; do
	# dashes in the output get counted as words;
	# pandoc uses them as list bullets.
	wc=`pandoc -i $f -t plain | tr -- " -" "  " | wc -w`
	total=$(( $total + $wc))
	count=$(( $count + 1))
	day=`echo $f | head -c10 | tail -c2 | sed s/^0//`
	if [[ ! -z $2 ]]; then
	    echo -e "`printf %7d $wc`"  $f
	fi
	if (( $day > $last + 1 )); then
	    missed=$(( $missed + 1 ))
	fi
	last=$day
    done
    [[ -z $2 ]] || echo $2
}

# Count words and posts so far this month
count-words $y/$m/ $verbose
if (($count == 0)); then
    avg=0
else
    avg=$(($total / $count))
fi

# If we're in a different month, add missed days past the last date seen:
if (( $this_month != $m )); then
    while [[ $m == $(date -d "$y/$m/$last + 1day" +%m) ]]; do
	missed=$(( $missed + 1))
	last=$(( $last + 1 ))
    done
fi
missed_days=$missed

echo -e  "`printf %7d $total`" words in $count posts this month "(average $avg/post)"

if (( $m == $this_month )); then
    count-words `date "+$y/$m/%d"`
    if [ $count == 1 ]; then s=" "; else s=s; fi
    echo -e  "`printf %7d $total`" words in $count post$s today
fi
if (( $missed_days != 0 )); then
    echo -e "`printf %7d $missed_days`" days with no posts
fi
echo '</pre>'
